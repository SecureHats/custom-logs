name: Display Credentials
on: workflow_dispatch

jobs:
  debug:
    name: Debug
    runs-on: ubuntu-latest

    steps:
    - name: view the secrets context
      shell: pwsh
      run: |
        #$regex = '([\{\},:\*\" ])'
        $regex = '([^\x00-\x7F]+)'
        $secretObject = $env:SECRETS_CONTEXT
        $secretObject = (($secretObject -replace $regex).trim() -split ("`n"))
        
        write-host $secretObject.count
        $secretObject | foreach {
          Write-Host "Object name [$_]"
        }
      env:
        SECRETS_CONTEXT: ${{ toJson(secrets) }}
    
    #- name: Debug
    #  shell: pwsh
    #  env:
    #    SECRETS_CONTEXT: ${{ secrets }}
    #  run: |
    #    "$SECRETS_CONTEXT"
    #    Write-Host "Read Secret from variables"        
    #    $newsec = "${{ secrets.workspaceid }}"
    #      
    #    write-host 'create a file'
    #    "${{ secrets }}" | out-file 'secrets.json'
    #      
    #    write-host $secrets
    #    write-host 'get-content'
    #    get-childitem $psscriptroot
    #    Get-Content ".\secrets.json"
    #      
    #    write-host $secrets
    #    write-host $secrets | ConvertTo-JSON
    #    $secrets | foreach {
    #      Write-host $_
    #    }
        #Write-Host "Generate an error that shows the secret value!!!!"
        #$encodedBytes = [System.Text.Encoding]::UTF8.GetBytes(${{ secrets.LONGSECRET }})
    
      ##  Write-Host 'Set Encoded Bytes'
        #$encodedBytes = [System.Text.Encoding]::UTF8.GetBytes(${{ secrets.LONGSECRET }})
#          Write-Host 'Set Base64'
#          $encodedText = [System.Convert]::ToBase64String($encodedBytes))
